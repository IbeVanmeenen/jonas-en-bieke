'use strict';

var jb = {};

/* ==========================================================================
   Jonas En Bieke - Code
   ========================================================================== */

jb.code = function () {

    var exports = jb.code;

    var btns = void 0;
    var givenCode = '';

    var codes = ['JD98PC39', 'LA09JJ39', 'BD08IN88'];

    // Check Code
    var checkCode = function checkCode() {
        if (codes.indexOf(givenCode) > -1) {
            console.log('correct code');
            givenCode = '';

            jb.sound.playSuccess();
        } else {
            console.log('wrong code');
            givenCode = '';

            jb.sound.playFail();
        }
    };

    // Check Code
    var checkCodeLenght = function checkCodeLenght() {
        console.log(givenCode);

        if (givenCode.length === 8) {
            checkCode();
        }
    };

    // Set Item
    var setItem = function setItem(btn) {
        btn.addEventListener('mousedown', function (e) {
            jb.sound.playClick();
        }, false);

        btn.addEventListener('touchstart', function (e) {
            jb.sound.playClick();
        }, false);

        btn.addEventListener('click', function (e) {
            givenCode += btn.dataset.code;
            checkCodeLenght();
        }, false);
    };

    // Init
    var init = function () {
        btns = document.getElementsByClassName('js-code-btn');

        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
            for (var _iterator = btns[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var btn = _step.value;

                setItem(btn);
            }
        } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
        } finally {
            try {
                if (!_iteratorNormalCompletion && _iterator.return) {
                    _iterator.return();
                }
            } finally {
                if (_didIteratorError) {
                    throw _iteratorError;
                }
            }
        }
    }();
};

/* ==========================================================================
   Jonas En Bieke - Sound
   ========================================================================== */

jb.sound = function () {
    var exports = jb.sound;

    var clickSound = void 0,
        failSound = void 0,
        successSound = void 0;

    var resetSound = function resetSound(soundEl) {
        soundEl.pause();
        soundEl.currentTime = 0;
    };

    // Click
    exports.playClick = function () {
        if (clickSound) {
            resetSound(clickSound);
            clickSound.play();
        }
    };

    exports.playFail = function () {
        if (failSound) {
            resetSound(failSound);
            failSound.play();
        }
    };

    exports.playSuccess = function () {
        if (successSound) {
            resetSound(successSound);
            successSound.play();
        }
    };

    // Init
    var init = function () {
        clickSound = document.getElementById('sound--click');
        failSound = document.getElementById('sound--fail');
        successSound = document.getElementById('sound--success');
    }();
};

/* ==========================================================================
   Jonas & Bieke
   ========================================================================== */

jb.app = function () {

    var exports = jb.app;

    // Scroll
    var appScroll = function appScroll() {
        // Put functions in the '_update' function :-)
        var latestKnownScrollY = 0,
            ticking = false;

        var _onScroll = function _onScroll() {
            latestKnownScrollY = window.pageYOffset;
            _requestTick();
        };

        var _requestTick = function _requestTick() {
            if (!ticking) {
                window.requestAnimationFrame(_update);
            }
            ticking = true;
        };

        var _update = function _update() {
            ticking = false;
            var currentScrollY = latestKnownScrollY;

            // jb.component.updateScroll(currentScrollY);
        };

        // scroll mousewheel wheel
        window.onscroll = function (e) {
            _onScroll();
        };
    };

    // On load
    exports.onload = function () {};

    // Init
    var init = function () {
        jb.code();
        jb.sound();
    }();
};

var ready = function ready(fn) {
    // Sanity check
    if (typeof fn !== 'function') return;

    // If document is already loaded, run method
    if (document.readyState === 'complete') {
        return fn();
    }

    // Otherwise, wait until document is loaded
    document.addEventListener('DOMContentLoaded', fn, false);
};

ready(function () {
    jb.app();
});

window.onload = function () {
    jb.app.onload();
};